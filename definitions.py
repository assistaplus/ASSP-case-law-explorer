from os.path import dirname, abspath, join, exists
from os import makedirs
"""
Purpose of script:
a)  define directory paths
b)  define the terminology to be used throughout all data processing steps.
    The original terms used in the raw data of "Rechtspraak" and "Legal intelligence" are mapped to each other
    and replaced by a global label.
    Variable names correspond to the original terms and are denoted with the prefix of their source
    (RS = Rechtspraak, LI = Legal intelligence). 
"""

# PATH DEFINITIONS:
# data folder structure
DIR_ROOT = dirname(abspath(__file__))
DIR_DATA = join(DIR_ROOT, 'data')
DIR_DATA_RAW = join(DIR_DATA, 'raw')
DIR_DATA_PROCESSED = join(DIR_DATA, 'processed')
DIR_RECHTSPRAAK = join(DIR_DATA, 'OpenDataUitspraken')
for d in [DIR_DATA, DIR_DATA_RAW, DIR_DATA_PROCESSED]:
    if not exists(d):
        makedirs(d)
# raw data
CSV_RS_CASES = join(DIR_DATA_RAW, 'RS_cases.csv')
CSV_RS_OPINIONS = join(DIR_DATA_RAW, 'RS_case_opinions_from_advocate_general.csv')
CSV_LI_CASES = join(DIR_DATA_RAW, 'LI_cases.csv')
CSV_CASE_CITATIONS = join(DIR_DATA_RAW, 'caselaw_citations.csv')
CSV_LEGISLATION_CITATIONS = join(DIR_DATA_RAW, 'legislation_citations.csv')
# processed data
CSV_RS_CASES_PROC = join(DIR_DATA_RAW, 'RS_cases_clean.csv')
CSV_RS_OPINIONS_PROC = join(DIR_DATA_RAW, 'RS_case_opinions_from_advocate_general_clean.csv')
CSV_LI_CASES_PROC = join(DIR_DATA_RAW, 'LI_cases_clean.csv')
CSV_CASE_CITATIONS_PROC = join(DIR_DATA_RAW, 'caselaw_citations_clean.csv')
CSV_LEGISLATION_CITATIONS_PROC = join(DIR_DATA_RAW, 'legislation_citations_clean.csv')


# ----------------------------------------------------------------------------------------------------------------------
# TERMINOLOGY DEFINITIONS:
# change here if you want to remap fields (match RS to LI fields)
ECLI = RS_IDENTIFIER = LIDO_SOURCE_ECLI = 'ecli'  # doesn't exist in original LI: generated by script
SOURCE = LI_DOCUMENT_TYPE = 'source'  # doesn't exist in original RS: generated by script
JURISDICTION_COUNTRY = LI_JURISDICTION = 'jurisdiction_country'  # doesn't exist in original RS: generated by script
RS_ISSUED = LI_PUBLICATION_DATE = 'date_published_online'
RS_CREATOR = LI_ISSUING_INSTITUTION = 'instance'
RS_DATE = LI_ENACTMENT_DATE = 'date_decision'
RS_ZAAKNUMMER = LI_CASE_NUMBER = 'case_number'
RS_SUBJECT = LI_LAW_AREA = 'domains'
RS_HASVERSION = LI_SOURCES = 'alternative_publications'
RS_IDENTIFIER2 = LI_ORIGINAL_URL = 'publication_url'
RS_INHOUDSINDICATIE = LI_SUMMARY = 'summary'
RS_TITLE = LI_TITLE = 'title'
RS_FULL_TEXT = LI_ORIGINAL_URL = 'full_text'


RS_LANGUAGE = 'language'
RS_TYPE = 'document_type'
RS_PROCEDURE = 'procedure_type'
RS_SPATIAL = 'jurisdiction_city'
RS_RELATION = 'predecessor_successor_cases'
RS_REFERENCES = 'referenced_legislation_titles'
RS_INFO = 'info'

RS_DECISION_ECLI = 'decision_ecli'  # generated by script

LI_ID = 'document_id'
LI_DISPLAY_TITLE = 'display_title'
LI_DISPLAY_SUBTITLE = 'display_subtitle'
LI_URL = 'url_to_li'
LI_PUBLICATION_NUMBER = 'publication_number'
LI_ISSUE_NUMBER = 'issue_number'
LI_DATE_ADDED = 'date_added_to_li'
# suffix for li attributes:
LI = '_li'

LIDO_TARGET_ECLI = 'target_ecli'
LIDO_LEGISLATION_URL = 'target_legislation_url'
TARGET_LEGISLATION_ARTICLE_URL = 'target_legislation_article_url'

# ------------------ don't change --------------------------
# map to rename original field names to terminology defined above
# (no need to change: changes automatically if definitions above change):
MAP_RS = {
    'identifier': RS_IDENTIFIER,  # ECLI (European Case Law Identifier) -- unique identifier for court decisions in Europe
    'issued': RS_ISSUED,  # date of document publication (on Rechtspraak.nl)
    'language': RS_LANGUAGE,  # language of jurisdiction to which case belongs
    'creator': RS_CREATOR,  # name of instance (court)
    'date': RS_DATE,  # date of court decision
    'zaaknummer': RS_ZAAKNUMMER,  # case number, for internal use by courts -- main identifier prior to introduction of ECLI
    'type': RS_TYPE,  # 'uitspraak' (decision) or 'conclusie' (opinion)
    'procedure': RS_PROCEDURE,  # procedure type (e.g. summary proceedings)
    'spatial': RS_SPATIAL,  # court location (municipality)
    'subject': RS_SUBJECT,  # domain (area of the law) applicable to case
    'relation': RS_RELATION,  # predecessor and successor cases (in case of appeal, cassation, preliminary decisions etc)
    'references': RS_REFERENCES,  # title of applicable legislation
    'hasVersion: ': RS_HASVERSION,  # URL to publication outlet of case (here Rechtspraak.nl)
    'identifier2': RS_IDENTIFIER2,  # URL (deeplink) to case as published on Rechtspraak.nl (original tag name: 'identifier' -- section 2)
    'title': RS_TITLE,  # title of case
    'inhoudsindicatie': RS_INHOUDSINDICATIE,  # case summary
    'info': RS_INFO,  # information about case, often not systematic or already captured in other fields (original tag name: either 'uitspraak.info or 'conclusie.info')
    'full_text': RS_FULL_TEXT  # full text of case (original tag name: either 'uitspraak' or 'conclusie')
}

# Legal Intelligence provides additional information to cases.
# It contains a collection of (all/multiple) versions of a case from different publishers.
# original field names of LI can be found here: https://www.legalintelligence.com/files/li-search-endpoint.pdf
MAP_LI = {
    'Id': LI_ID + LI,  # internal document id in LI
    'Title': LI_TITLE + LI,  # title of original document
    'DisplayTitle': LI_DISPLAY_TITLE + LI,  # title of document entry in LI
    'DisplaySubtitle': LI_DISPLAY_SUBTITLE + LI,  # subtitle of document entry in LI
    'Summary': LI_SUMMARY + LI,  # case summary
    'Url': LI_URL + LI,  # URL to LI entry of document
    'OriginalUrl': LI_ORIGINAL_URL + LI,  # URL to original document by publisher
    'Jurisdiction': LI_JURISDICTION + LI,  # country of jurisdiction
    'DocumentType': LI_DOCUMENT_TYPE + LI,  # source of case (here: always 'Rechtspraak')
    'LawArea': LI_LAW_AREA + LI,  # domain(s) (area(s) of the law) applicable to case
    'IssuingInstitution': LI_ISSUING_INSTITUTION + LI,  # name of instance (court)
    'CaseNumber': LI_CASE_NUMBER + LI,  # unique case identifier (ECLI or previous format)
    'PublicationNumber': LI_PUBLICATION_NUMBER + LI,  # internal document id of publisher
    'IssueNumber': LI_ISSUE_NUMBER + LI,  # collection id of publisher
    'PublicationDate': LI_PUBLICATION_DATE + LI,  # date of document publication (by publisher)
    'EnactmentDate': LI_ENACTMENT_DATE + LI,  # date of court decision
    'DateAdded': LI_DATE_ADDED + LI,  # date of document added to the LI platform
    'Sources': LI_SOURCES + LI  # alternative publishing institutions
}

MAP_CASE_CITATIONS = {
    'ecli': LIDO_SOURCE_ECLI,  # citing case ecli
    'Jurisprudentie': LIDO_TARGET_ECLI,  # cited case ecli
}

MAP_LEGISLATION_CITATIONS = {
    'ecli': LIDO_SOURCE_ECLI,  # citing case ecli
    'Wet': LIDO_LEGISLATION_URL,  # URL to cited legislation
    'Artikel': TARGET_LEGISLATION_ARTICLE_URL  # URL to cited legislation article
}





